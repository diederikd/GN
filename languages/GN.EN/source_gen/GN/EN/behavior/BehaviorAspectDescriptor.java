package GN.EN.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  public BehaviorAspectDescriptor() {
  }
  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0b, fqName)) {
      case 64:
        return new VariableDefinition_BehaviorDescriptor();
      case 25:
        return new GNInt_BehaviorDescriptor();
      case 27:
        return new GNString_BehaviorDescriptor();
      case 65:
        return new VariableReference_BehaviorDescriptor();
      case 35:
        return new IntegerValue_BehaviorDescriptor();
      case 1:
        return new Addition_BehaviorDescriptor();
      case 24:
        return new GNDouble_BehaviorDescriptor();
      case 59:
        return new StringValue_BehaviorDescriptor();
      case 62:
        return new Substraction_BehaviorDescriptor();
      case 9:
        return new Divide_BehaviorDescriptor();
      case 42:
        return new Multiplication_BehaviorDescriptor();
      case 46:
        return new Object_BehaviorDescriptor();
      case 60:
        return new Subject_BehaviorDescriptor();
      case 21:
        return new GNBoolean_BehaviorDescriptor();
      case 14:
        return new EventType_BehaviorDescriptor();
      case 23:
        return new GNDateTime_BehaviorDescriptor();
      case 28:
        return new GNVariable_BehaviorDescriptor();
      case 22:
        return new GNDate_BehaviorDescriptor();
      case 66:
        return new VariableRole_BehaviorDescriptor();
      case 3:
        return new BinaryFactType_BehaviorDescriptor();
      case 43:
        return new N_Ary_FactType_BehaviorDescriptor();
      case 61:
        return new SubjectRole_BehaviorDescriptor();
      case 4:
        return new Characteristic_BehaviorDescriptor();
      case 11:
        return new Equation_BehaviorDescriptor();
      case 53:
        return new Proposition_BehaviorDescriptor();
      case 15:
        return new Fact_BehaviorDescriptor();
      case 63:
        return new UniqueConstraint_BehaviorDescriptor();
      case 12:
        return new EquationCondition_BehaviorDescriptor();
      case 7:
        return new DerivationRule_BehaviorDescriptor();
      case 13:
        return new EventRule_BehaviorDescriptor();
      case 20:
        return new GNAmount_BehaviorDescriptor();
      case 29:
        return new GNYear_BehaviorDescriptor();
      case 40:
        return new LegalContext_BehaviorDescriptor();
      case 47:
        return new ObjectRole_BehaviorDescriptor();
      case 45:
        return new Norm_BehaviorDescriptor();
      case 0:
        return new ActType_BehaviorDescriptor();
      case 49:
        return new PowerLiability_BehaviorDescriptor();
      case 30:
        return new ImmunityDisability_BehaviorDescriptor();
      case 5:
        return new ClaimDuty_BehaviorDescriptor();
      case 50:
        return new PrivilegeNoRight_BehaviorDescriptor();
      case 26:
        return new GNMonth_BehaviorDescriptor();
      case 10:
        return new DutyClaim_BehaviorDescriptor();
      case 8:
        return new DisabilityImmunity_BehaviorDescriptor();
      case 41:
        return new LiabilityPower_BehaviorDescriptor();
      case 44:
        return new NoRightPrivilege_BehaviorDescriptor();
      case 34:
        return new InstantAct_BehaviorDescriptor();
      case 37:
        return new IntervalAct_BehaviorDescriptor();
      case 16:
        return new FactCondition_BehaviorDescriptor();
      case 2:
        return new AdditionSubstractionRule_BehaviorDescriptor();
      case 51:
        return new Product_BehaviorDescriptor();
      case 17:
        return new FactInProduct_BehaviorDescriptor();
      case 36:
        return new InteractionContext_BehaviorDescriptor();
      case 6:
        return new ClassifyAssertionAsFact_BehaviorDescriptor();
      case 55:
        return new RelationExists_BehaviorDescriptor();
      case 39:
        return new LargerThan_BehaviorDescriptor();
      case 57:
        return new SmallerThan_BehaviorDescriptor();
      case 58:
        return new SpecialisationRule_BehaviorDescriptor();
      case 56:
        return new Service_BehaviorDescriptor();
      case 52:
        return new ProductInService_BehaviorDescriptor();
      case 54:
        return new ReferenceContext_BehaviorDescriptor();
      case 31:
        return new IndividualNounConcept_BehaviorDescriptor();
      case 38:
        return new IsIndividualOf_BehaviorDescriptor();
      case 33:
        return new IndividualRoleRef_BehaviorDescriptor();
      case 48:
        return new ParameterTable_BehaviorDescriptor();
      case 32:
        return new IndividualRole_BehaviorDescriptor();
      case 18:
        return new FactRole_BehaviorDescriptor();
      case 19:
        return new FactRoleRef_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }
  private static String[] stringSwitchCases_846f5o_a0a0b = new String[]{"GN.EN.structure.ActType", "GN.EN.structure.Addition", "GN.EN.structure.AdditionSubstractionRule", "GN.EN.structure.BinaryFactType", "GN.EN.structure.Characteristic", "GN.EN.structure.ClaimDuty", "GN.EN.structure.ClassifyAssertionAsFact", "GN.EN.structure.DerivationRule", "GN.EN.structure.DisabilityImmunity", "GN.EN.structure.Divide", "GN.EN.structure.DutyClaim", "GN.EN.structure.Equation", "GN.EN.structure.EquationCondition", "GN.EN.structure.EventRule", "GN.EN.structure.EventType", "GN.EN.structure.Fact", "GN.EN.structure.FactCondition", "GN.EN.structure.FactInProduct", "GN.EN.structure.FactRole", "GN.EN.structure.FactRoleRef", "GN.EN.structure.GNAmount", "GN.EN.structure.GNBoolean", "GN.EN.structure.GNDate", "GN.EN.structure.GNDateTime", "GN.EN.structure.GNDouble", "GN.EN.structure.GNInt", "GN.EN.structure.GNMonth", "GN.EN.structure.GNString", "GN.EN.structure.GNVariable", "GN.EN.structure.GNYear", "GN.EN.structure.ImmunityDisability", "GN.EN.structure.IndividualNounConcept", "GN.EN.structure.IndividualRole", "GN.EN.structure.IndividualRoleRef", "GN.EN.structure.InstantAct", "GN.EN.structure.IntegerValue", "GN.EN.structure.InteractionContext", "GN.EN.structure.IntervalAct", "GN.EN.structure.IsIndividualOf", "GN.EN.structure.LargerThan", "GN.EN.structure.LegalContext", "GN.EN.structure.LiabilityPower", "GN.EN.structure.Multiplication", "GN.EN.structure.N_Ary_FactType", "GN.EN.structure.NoRightPrivilege", "GN.EN.structure.Norm", "GN.EN.structure.Object", "GN.EN.structure.ObjectRole", "GN.EN.structure.ParameterTable", "GN.EN.structure.PowerLiability", "GN.EN.structure.PrivilegeNoRight", "GN.EN.structure.Product", "GN.EN.structure.ProductInService", "GN.EN.structure.Proposition", "GN.EN.structure.ReferenceContext", "GN.EN.structure.RelationExists", "GN.EN.structure.Service", "GN.EN.structure.SmallerThan", "GN.EN.structure.SpecialisationRule", "GN.EN.structure.StringValue", "GN.EN.structure.Subject", "GN.EN.structure.SubjectRole", "GN.EN.structure.Substraction", "GN.EN.structure.UniqueConstraint", "GN.EN.structure.VariableDefinition", "GN.EN.structure.VariableReference", "GN.EN.structure.VariableRole"};
}
