package GN.EN.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.RefCellCellProvider;
import jetbrains.mps.nodeEditor.InlineCellProvider;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;

public class Norm_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_n9tpk8_a(editorContext, node);
  }
  public EditorCell createInspectedCell(EditorContext editorContext, SNode node) {
    return this.createCollection_n9tpk8_a_0(editorContext, node);
  }
  private EditorCell createCollection_n9tpk8_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_n9tpk8_a");
    editorCell.setBig(true);
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    if (renderingCondition_n9tpk8_a0a(node, editorContext)) {
      editorCell.addEditorCell(this.createCollection_n9tpk8_a0(editorContext, node));
    }
    return editorCell;
  }
  private EditorCell createCollection_n9tpk8_a0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_n9tpk8_a0");
    editorCell.addEditorCell(this.createConstant_n9tpk8_a0a(editorContext, node));
    editorCell.addEditorCell(this.createProperty_n9tpk8_b0a(editorContext, node));
    editorCell.addEditorCell(this.createRefCell_n9tpk8_c0a(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_n9tpk8_d0a(editorContext, node));
    editorCell.addEditorCell(this.createProperty_n9tpk8_e0a(editorContext, node));
    editorCell.addEditorCell(this.createRefCell_n9tpk8_f0a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_n9tpk8_g0a(editorContext, node));
    editorCell.addEditorCell(this.createRefCell_n9tpk8_h0a(editorContext, node));
    editorCell.addEditorCell(this.createCollection_n9tpk8_i0a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_n9tpk8_j0a(editorContext, node));
    return editorCell;
  }
  private static boolean renderingCondition_n9tpk8_a0a(SNode node, EditorContext editorContext) {
    SNode mc;
    int y;
    int vf;
    int vt;
    boolean sA;
    boolean result;
    mc = (SNode) SNodeOperations.getParent(SNodeOperations.getParent(node));
    y = SPropertyOperations.getInteger(SLinkOperations.getTarget(SLinkOperations.getTarget(mc, MetaAdapterFactory.getContainmentLink(0xc8a89881cd3241c4L, 0x95c104edc1da66f5L, 0x77865133b23b59aL, 0x6e2b6ff409f63356L, "validOn")), MetaAdapterFactory.getContainmentLink(0xbc8d23916b3f484bL, 0xb07121047e65fa3eL, 0x48f33e893f5307e2L, 0x6e8b8eb5c02025a4L, "year")), MetaAdapterFactory.getProperty(0xbc8d23916b3f484bL, 0xb07121047e65fa3eL, 0x6e8b8eb5c01f6888L, 0x6e8b8eb5c0200cb0L, "year"));
    vf = SPropertyOperations.getInteger(SLinkOperations.getTarget(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0x5e1c5a020383495cL, 0x8688687a5f581193L, 0x2027965e8545dbcbL, 0x13d398305bc28415L, "validFrom")), MetaAdapterFactory.getContainmentLink(0xbc8d23916b3f484bL, 0xb07121047e65fa3eL, 0x48f33e893f5307e2L, 0x6e8b8eb5c02025a4L, "year")), MetaAdapterFactory.getProperty(0xbc8d23916b3f484bL, 0xb07121047e65fa3eL, 0x6e8b8eb5c01f6888L, 0x6e8b8eb5c0200cb0L, "year"));
    vt = SPropertyOperations.getInteger(SLinkOperations.getTarget(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0x5e1c5a020383495cL, 0x8688687a5f581193L, 0x2027965e8545dbcbL, 0x13d398305bc28417L, "validTo")), MetaAdapterFactory.getContainmentLink(0xbc8d23916b3f484bL, 0xb07121047e65fa3eL, 0x48f33e893f5307e2L, 0x6e8b8eb5c02025a4L, "year")), MetaAdapterFactory.getProperty(0xbc8d23916b3f484bL, 0xb07121047e65fa3eL, 0x6e8b8eb5c01f6888L, 0x6e8b8eb5c0200cb0L, "year"));
    sA = SPropertyOperations.getBoolean(mc, MetaAdapterFactory.getProperty(0xc8a89881cd3241c4L, 0x95c104edc1da66f5L, 0x77865133b23b59aL, 0x221af7dfc8a87601L, "showAll"));
    result = ((y <= vt) && (y >= vf)) || sA;
    return result;
  }
  private EditorCell createConstant_n9tpk8_a0a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "norm");
    editorCell.setCellId("Constant_n9tpk8_a0a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createProperty_n9tpk8_b0a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("name");
    provider.setNoTargetText("<no name>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_name");
    Style style = new StyleImpl();
    Styles_StyleSheet.apply_Name(style, editorCell);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createRefCell_n9tpk8_c0a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefCellCellProvider(node, editorContext);
    provider.setRole("directSubject");
    provider.setNoTargetText("<no directSubject>");
    EditorCell editorCell;
    provider.setAuxiliaryCellProvider(new Norm_Editor._Inline_n9tpk8_a2a0());
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setReferenceCell(true);
      editorCell.setRole("directSubject");
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  public static class _Inline_n9tpk8_a2a0 extends InlineCellProvider {
    public _Inline_n9tpk8_a2a0() {
      super();
    }
    public EditorCell createEditorCell(EditorContext editorContext) {
      return this.createEditorCell(editorContext, this.getSNode());
    }
    public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
      return this.createProperty_n9tpk8_a0c0a(editorContext, node);
    }
    private EditorCell createProperty_n9tpk8_a0c0a(EditorContext editorContext, SNode node) {
      CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
      provider.setRole("name");
      provider.setNoTargetText("<no name>");
      EditorCell editorCell;
      editorCell = provider.createEditorCell(editorContext);
      editorCell.setCellId("property_name_1");
      Style style = new StyleImpl();
      Styles_StyleSheet.apply_Concept(style, editorCell);
      editorCell.getStyle().putAll(style);
      editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
      SNode attributeConcept = provider.getRoleAttribute();
      Class attributeKind = provider.getRoleAttributeClass();
      if (attributeConcept != null) {
        EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
        return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
      } else
      return editorCell;
    }
  }
  private EditorCell createRefNode_n9tpk8_d0a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("modaloperator");
    provider.setNoTargetText("<no modaloperator>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setRole("modaloperator");
    }
    Style style = new StyleImpl();
    Styles_StyleSheet.apply_Keyword(style, editorCell);
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createProperty_n9tpk8_e0a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("name");
    provider.setNoTargetText("<no name>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_name_2");
    Style style = new StyleImpl();
    Styles_StyleSheet.apply_Verb(style, editorCell);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createRefCell_n9tpk8_f0a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefCellCellProvider(node, editorContext);
    provider.setRole("indirectSubject");
    provider.setNoTargetText("<no indirectSubject>");
    EditorCell editorCell;
    provider.setAuxiliaryCellProvider(new Norm_Editor._Inline_n9tpk8_a5a0());
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setReferenceCell(true);
      editorCell.setRole("indirectSubject");
    }
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  public static class _Inline_n9tpk8_a5a0 extends InlineCellProvider {
    public _Inline_n9tpk8_a5a0() {
      super();
    }
    public EditorCell createEditorCell(EditorContext editorContext) {
      return this.createEditorCell(editorContext, this.getSNode());
    }
    public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
      return this.createProperty_n9tpk8_a0f0a(editorContext, node);
    }
    private EditorCell createProperty_n9tpk8_a0f0a(EditorContext editorContext, SNode node) {
      CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
      provider.setRole("name");
      provider.setNoTargetText("<no name>");
      EditorCell editorCell;
      editorCell = provider.createEditorCell(editorContext);
      editorCell.setCellId("property_name_3");
      Style style = new StyleImpl();
      Styles_StyleSheet.apply_Name(style, editorCell);
      editorCell.getStyle().putAll(style);
      editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
      SNode attributeConcept = provider.getRoleAttribute();
      Class attributeKind = provider.getRoleAttributeClass();
      if (attributeConcept != null) {
        EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
        return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
      } else
      return editorCell;
    }
  }
  private EditorCell createConstant_n9tpk8_g0a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "act");
    editorCell.setCellId("Constant_n9tpk8_g0a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefCell_n9tpk8_h0a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefCellCellProvider(node, editorContext);
    provider.setRole("act");
    provider.setNoTargetText("<no act>");
    EditorCell editorCell;
    provider.setAuxiliaryCellProvider(new Norm_Editor._Inline_n9tpk8_a7a0());
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setReferenceCell(true);
      editorCell.setRole("act");
    }
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  public static class _Inline_n9tpk8_a7a0 extends InlineCellProvider {
    public _Inline_n9tpk8_a7a0() {
      super();
    }
    public EditorCell createEditorCell(EditorContext editorContext) {
      return this.createEditorCell(editorContext, this.getSNode());
    }
    public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
      return this.createProperty_n9tpk8_a0h0a(editorContext, node);
    }
    private EditorCell createProperty_n9tpk8_a0h0a(EditorContext editorContext, SNode node) {
      CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
      provider.setRole("name");
      provider.setNoTargetText("<no name>");
      EditorCell editorCell;
      editorCell = provider.createEditorCell(editorContext);
      editorCell.setCellId("property_name_4");
      editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
      SNode attributeConcept = provider.getRoleAttribute();
      Class attributeKind = provider.getRoleAttributeClass();
      if (attributeConcept != null) {
        EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
        return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
      } else
      return editorCell;
    }
  }
  private EditorCell createCollection_n9tpk8_i0a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_n9tpk8_i0a");
    editorCell.addEditorCell(this.createRefNode_n9tpk8_a8a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_n9tpk8_b8a0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_n9tpk8_c8a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_n9tpk8_d8a0(editorContext, node));
    return editorCell;
  }
  private EditorCell createRefNode_n9tpk8_a8a0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("timing");
    provider.setNoTargetText("<no timing>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setRole("timing");
    }
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_n9tpk8_b8a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "if ");
    editorCell.setCellId("Constant_n9tpk8_b8a0");
    Style style = new StyleImpl();
    Styles_StyleSheet.apply_Keyword(style, editorCell);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_n9tpk8_c8a0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("condition");
    provider.setNoTargetText("<no condition>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setRole("condition");
    }
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, 0, true);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_n9tpk8_d8a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_n9tpk8_d8a0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_n9tpk8_j0a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_n9tpk8_j0a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.MATCHING_LABEL, 0, "body-brace");
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_n9tpk8_a_0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_n9tpk8_a_0");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createConstant_n9tpk8_a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_n9tpk8_b0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_n9tpk8_c0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_n9tpk8_d0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_n9tpk8_e0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_n9tpk8_f0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_n9tpk8_g0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_n9tpk8_h0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_n9tpk8_i0(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_n9tpk8_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Valid From ");
    editorCell.setCellId("Constant_n9tpk8_a0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_n9tpk8_b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ":");
    editorCell.setCellId("Constant_n9tpk8_b0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_n9tpk8_c0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("validFrom");
    provider.setNoTargetText("<no validFrom>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setRole("validFrom");
    }
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_n9tpk8_d0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Valid To");
    editorCell.setCellId("Constant_n9tpk8_d0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_n9tpk8_e0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ":");
    editorCell.setCellId("Constant_n9tpk8_e0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_n9tpk8_f0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("validTo");
    provider.setNoTargetText("<no validTo>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setRole("validTo");
    }
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_n9tpk8_g0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Registered on");
    editorCell.setCellId("Constant_n9tpk8_g0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_n9tpk8_h0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ":");
    editorCell.setCellId("Constant_n9tpk8_h0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_n9tpk8_i0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("registredOn");
    provider.setNoTargetText("<no registredOn>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setRole("registredOn");
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
}
